## Initialization Tool ?
- WHAT ?
  : Windows 윈도 이미지 생성 전, 서버의 SID를 초기화하는 용도로 활용함
  : Windows 2012/2016/2019 운영 체제에서 지원
- WHY ?
  : Windows Server에서 SID를 초기화하여 Active Directory 구성시 Sysprep을 실행한 서버에서 SQL 인증 오류를 방지하기 위함.
- WHICH ?
  | 구분 | Initialization Tool | Sysprep |
  |------|-------------------|----------|
  | 주요 목적 | 서버의 SID 초기화 및 SQL 인증 오류 방지 | 시스템의 전체 초기화, 새로 설치할 준비 (복제 준비) |
  | 어디에 사용? | 서버 환경에서 SID 초기화가 필요할 때 | Windows 운영 체제를 복제하거나 준비할 때 |
  | SID 초기화 | SID 초기화 | SID 초기화 |
  | 설정 초기화 | 기본적인 SID 초기화 작업만 수행 | 시스템의 전체 설정 (사용자, 드라이버 등) 초기화 |
  | 주요 사용 예시 | 서버 배포 및 복제 시 각 서버가 고유한 SID를 갖도록 설정 | 여러 대의 컴퓨터에 동일한 운영 체제나 설정을 복제할 때 |
- HOW ?
  : 관리자 권한으로 PowerShell 실행 -> Script로 Initialization Tool 다운로드 -> MSSQL 설치 여부 체킹 -> 초기화 및 Sysprep 작업 수행


## Linux에서 LVM 구성
- WHY?
  1. 디스크 관리의 유연성
    : 기존 파티션 방식보다 유연하게 디스크 관리할 수 있도록 도와주는 시스템
    : 물리적인 디스크를 논리적인 단위로 분할하고, 필요에 따라 크기를 확장 or 축소 가능케 함
  2. 디스크 공간을 동적으로 쉽게 확장 또는 축소 가능함
    : 기존 시스템을 다운하지 않고도 공간을 확장할 수 있다는 장점
  3. 디스크 성능 최적화
    : 여러 디스크를 RAID 처럼 사용할 수 있음
- HOW?
  -> fdisk (디스크 파티셔닝) - /dev/sdb 라는 디스크를 파티셔닝하여 /dev/sdb1 이라는 파티션으로 생성
  -> pvcreate (물리 볼륨 생성) - /dev/sdb1 파티션을 물리 볼륨으로 설정함
  -> vgcreate (볼륨 그룹 생성) - 여러 개의 물리 볼륨(PV)을 묶어서 하나의 볼륨 그룹으로 생성하고, 그 안에 논리 볼륨(LV) 생성 
  -> lvcreate (논리 볼륨 생성) - 파일 시스템을 생성할 수 있는 디스크 공간 제공

    *ref)) 
      83: Linux 기본 파티션 (일반적인 Linux 파일 시스템용)
      e6: Linux RAID 파티션 (RAID 구성을 위한 파티션)
      80: Linux 파일 시스템 (리눅스 부팅 파티션으로 사용될 수 있음)
      8e: LVM 파티션 (LVM,Logical Volume Manager 을 구성하기 위한 파티션 유형)


## 클라우드 환경 내부의 용어 정리
- VPC 환경 기준 Zone 종속 여부 상품 분류 
  1. 서버 (VM)
    : 가상 머신 (VM)은 물리적인 서버 대신 사용하는 클라우드 상의 가상 컴퓨터
    : 애플리케이션 실행, 웹사이트 호스팅 등 클라우드에서 다양한 작업을 처리
    : Zone 종속 O - **특정 가용 영역(Availability Zone)**에 배치되어야 함 
    : eg)) AWS: EC2 인스턴스는 Availability Zone 내에서만 실행
           Google Cloud: VM은 지역(Region) 내에서 특정 Zone에 배치
           Azure: VM은 특정 Region의 Availability Zone에 배치
           네이버 클라우드: Compute 인스턴스는 Availability Zone 내에 배치

  2. 로드밸런서 (Load Balancer)
    : 여러 서버에 들어오는 트래픽을 균등하게 분배하여 서버 과부하를 방지
    : 여러 서버에 트래픽을 고르게 나누어주는 역할로, 다수의 서버에 요청을 분배
    : Zone 종속 X - **여러 가용 영역(AZ)** 에 걸쳐 트래픽 분배 가능
    : eg)) AWS: **Elastic Load Balancer(ELB)**는 여러 Availability Zone에 걸쳐 트래픽을 분배
           Google Cloud: Global Load Balancer는 글로벌 단위로 트래픽을 분배
           Azure: Azure Load Balancer는 여러 Availability Zone에서 서비스를 제공
           네이버 클라우드: L7 Load Balancer는 여러 Availability Zone에 걸쳐 트래픽을 분배
  3. 서브넷 (Subnet)
    : 네트워크 내에서 IP 주소 범위를 나누어 관리할 수 있도록 도와주는 역할
    : VPC(Virtual Private Cloud) 내에서 서로 다른 네트워크를 나누어 설정하는 용도로 사용됨
    : Zone 종속 O - 반드시 하나의 가용 영역에 속해야 함
    : eg)) AWS: VPC 서브넷은 특정 Availability Zone 내에 배치
           Google Cloud: VPC 서브넷은 지역(Region) 내에 배치되며, 각 서브넷은 특정 Zone에 속함
           Azure: VNet Subnet은 Region 내에서 특정 Availability Zone에 속함
           네이버 클라우드: VPC 서브넷은 특정 Availability Zone 내에 배치
  4. NAT Gateway
    : 사설 네트워크에서 인터넷으로 나갈 수 있도록 돕는 다리 역할 함
    : 사설 IP 주소를 가진 서버가 인터넷에 연결될 수 있게 해주는 역할
    : Zone 종속 O - **특정 가용 영역 내에서만** 동작 => 하나의 Zone에 배치된 서버들이 인터넷에 접근 가능
    : eg)) AWS: NAT Gateway는 Availability Zone에 배치
           Google Cloud: NAT Gateway는 **VPC의 특정 지역(Region)**에 배치
           Azure: NAT Gateway는 Region 내의 Availability Zone에 배치
           네이버 클라우드: NAT Gateway는 특정 Availability Zone에 배치
